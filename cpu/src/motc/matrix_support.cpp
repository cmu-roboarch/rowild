/* Produced by CVXGEN, 2022-04-23 00:22:14 -0400.  */
/* CVXGEN is Copyright (C) 2006-2017 Jacob Mattingley, jem@cvxgen.com. */
/* The code in this file is Copyright (C) 2006-2017 Jacob Mattingley. */
/* CVXGEN, or solvers produced by CVXGEN, cannot be used for commercial */
/* applications without prior written permission from Jacob Mattingley. */

/* Filename: matrix_support.c. */
/* Description: Support functions for matrix multiplication and vector filling. */
#include "solver.h"
void multbymA(double *lhs, double *rhs) {
  lhs[0] = -rhs[0]*(-1)-rhs[22]*(-1)-rhs[24]*(1);
  lhs[1] = -rhs[1]*(-1)-rhs[23]*(-1)-rhs[25]*(1);
  lhs[2] = -rhs[2]*(-1)-rhs[24]*(-1)-rhs[26]*(1);
  lhs[3] = -rhs[3]*(-1)-rhs[25]*(-1)-rhs[27]*(1);
  lhs[4] = -rhs[4]*(-1)-rhs[26]*(-1)-rhs[28]*(1);
  lhs[5] = -rhs[5]*(-1)-rhs[27]*(-1)-rhs[29]*(1);
  lhs[6] = -rhs[6]*(-1)-rhs[28]*(-1)-rhs[30]*(1);
  lhs[7] = -rhs[7]*(-1)-rhs[29]*(-1)-rhs[31]*(1);
  lhs[8] = -rhs[22]*(-params.B_0[0])-rhs[23]*(-params.B_0[4])-rhs[32]*(-params.A_0[0])-rhs[33]*(-params.A_0[4])-rhs[34]*(-params.A_0[8])-rhs[35]*(-params.A_0[12])-rhs[36]*(1);
  lhs[9] = -rhs[22]*(-params.B_0[1])-rhs[23]*(-params.B_0[5])-rhs[32]*(-params.A_0[1])-rhs[33]*(-params.A_0[5])-rhs[34]*(-params.A_0[9])-rhs[35]*(-params.A_0[13])-rhs[37]*(1);
  lhs[10] = -rhs[22]*(-params.B_0[2])-rhs[23]*(-params.B_0[6])-rhs[32]*(-params.A_0[2])-rhs[33]*(-params.A_0[6])-rhs[34]*(-params.A_0[10])-rhs[35]*(-params.A_0[14])-rhs[38]*(1);
  lhs[11] = -rhs[22]*(-params.B_0[3])-rhs[23]*(-params.B_0[7])-rhs[32]*(-params.A_0[3])-rhs[33]*(-params.A_0[7])-rhs[34]*(-params.A_0[11])-rhs[35]*(-params.A_0[15])-rhs[39]*(1);
  lhs[12] = -rhs[24]*(-params.B_1[0])-rhs[25]*(-params.B_1[4])-rhs[36]*(-params.A_1[0])-rhs[37]*(-params.A_1[4])-rhs[38]*(-params.A_1[8])-rhs[39]*(-params.A_1[12])-rhs[40]*(1);
  lhs[13] = -rhs[24]*(-params.B_1[1])-rhs[25]*(-params.B_1[5])-rhs[36]*(-params.A_1[1])-rhs[37]*(-params.A_1[5])-rhs[38]*(-params.A_1[9])-rhs[39]*(-params.A_1[13])-rhs[41]*(1);
  lhs[14] = -rhs[24]*(-params.B_1[2])-rhs[25]*(-params.B_1[6])-rhs[36]*(-params.A_1[2])-rhs[37]*(-params.A_1[6])-rhs[38]*(-params.A_1[10])-rhs[39]*(-params.A_1[14])-rhs[42]*(1);
  lhs[15] = -rhs[24]*(-params.B_1[3])-rhs[25]*(-params.B_1[7])-rhs[36]*(-params.A_1[3])-rhs[37]*(-params.A_1[7])-rhs[38]*(-params.A_1[11])-rhs[39]*(-params.A_1[15])-rhs[43]*(1);
  lhs[16] = -rhs[26]*(-params.B_2[0])-rhs[27]*(-params.B_2[4])-rhs[40]*(-params.A_2[0])-rhs[41]*(-params.A_2[4])-rhs[42]*(-params.A_2[8])-rhs[43]*(-params.A_2[12])-rhs[44]*(1);
  lhs[17] = -rhs[26]*(-params.B_2[1])-rhs[27]*(-params.B_2[5])-rhs[40]*(-params.A_2[1])-rhs[41]*(-params.A_2[5])-rhs[42]*(-params.A_2[9])-rhs[43]*(-params.A_2[13])-rhs[45]*(1);
  lhs[18] = -rhs[26]*(-params.B_2[2])-rhs[27]*(-params.B_2[6])-rhs[40]*(-params.A_2[2])-rhs[41]*(-params.A_2[6])-rhs[42]*(-params.A_2[10])-rhs[43]*(-params.A_2[14])-rhs[46]*(1);
  lhs[19] = -rhs[26]*(-params.B_2[3])-rhs[27]*(-params.B_2[7])-rhs[40]*(-params.A_2[3])-rhs[41]*(-params.A_2[7])-rhs[42]*(-params.A_2[11])-rhs[43]*(-params.A_2[15])-rhs[47]*(1);
  lhs[20] = -rhs[28]*(-params.B_3[0])-rhs[29]*(-params.B_3[4])-rhs[44]*(-params.A_3[0])-rhs[45]*(-params.A_3[4])-rhs[46]*(-params.A_3[8])-rhs[47]*(-params.A_3[12])-rhs[48]*(1);
  lhs[21] = -rhs[28]*(-params.B_3[1])-rhs[29]*(-params.B_3[5])-rhs[44]*(-params.A_3[1])-rhs[45]*(-params.A_3[5])-rhs[46]*(-params.A_3[9])-rhs[47]*(-params.A_3[13])-rhs[49]*(1);
  lhs[22] = -rhs[28]*(-params.B_3[2])-rhs[29]*(-params.B_3[6])-rhs[44]*(-params.A_3[2])-rhs[45]*(-params.A_3[6])-rhs[46]*(-params.A_3[10])-rhs[47]*(-params.A_3[14])-rhs[50]*(1);
  lhs[23] = -rhs[28]*(-params.B_3[3])-rhs[29]*(-params.B_3[7])-rhs[44]*(-params.A_3[3])-rhs[45]*(-params.A_3[7])-rhs[46]*(-params.A_3[11])-rhs[47]*(-params.A_3[15])-rhs[51]*(1);
  lhs[24] = -rhs[30]*(-params.B_4[0])-rhs[31]*(-params.B_4[4])-rhs[48]*(-params.A_4[0])-rhs[49]*(-params.A_4[4])-rhs[50]*(-params.A_4[8])-rhs[51]*(-params.A_4[12])-rhs[52]*(1);
  lhs[25] = -rhs[30]*(-params.B_4[1])-rhs[31]*(-params.B_4[5])-rhs[48]*(-params.A_4[1])-rhs[49]*(-params.A_4[5])-rhs[50]*(-params.A_4[9])-rhs[51]*(-params.A_4[13])-rhs[53]*(1);
  lhs[26] = -rhs[30]*(-params.B_4[2])-rhs[31]*(-params.B_4[6])-rhs[48]*(-params.A_4[2])-rhs[49]*(-params.A_4[6])-rhs[50]*(-params.A_4[10])-rhs[51]*(-params.A_4[14])-rhs[54]*(1);
  lhs[27] = -rhs[30]*(-params.B_4[3])-rhs[31]*(-params.B_4[7])-rhs[48]*(-params.A_4[3])-rhs[49]*(-params.A_4[7])-rhs[50]*(-params.A_4[11])-rhs[51]*(-params.A_4[15])-rhs[55]*(1);
  lhs[28] = -rhs[32]*(1);
  lhs[29] = -rhs[33]*(1);
  lhs[30] = -rhs[34]*(1);
  lhs[31] = -rhs[35]*(1);
}
void multbymAT(double *lhs, double *rhs) {
  lhs[0] = -rhs[0]*(-1);
  lhs[1] = -rhs[1]*(-1);
  lhs[2] = -rhs[2]*(-1);
  lhs[3] = -rhs[3]*(-1);
  lhs[4] = -rhs[4]*(-1);
  lhs[5] = -rhs[5]*(-1);
  lhs[6] = -rhs[6]*(-1);
  lhs[7] = -rhs[7]*(-1);
  lhs[8] = 0;
  lhs[9] = 0;
  lhs[10] = 0;
  lhs[11] = 0;
  lhs[12] = 0;
  lhs[13] = 0;
  lhs[14] = 0;
  lhs[15] = 0;
  lhs[16] = 0;
  lhs[17] = 0;
  lhs[18] = 0;
  lhs[19] = 0;
  lhs[20] = 0;
  lhs[21] = 0;
  lhs[22] = -rhs[0]*(-1)-rhs[8]*(-params.B_0[0])-rhs[9]*(-params.B_0[1])-rhs[10]*(-params.B_0[2])-rhs[11]*(-params.B_0[3]);
  lhs[23] = -rhs[1]*(-1)-rhs[8]*(-params.B_0[4])-rhs[9]*(-params.B_0[5])-rhs[10]*(-params.B_0[6])-rhs[11]*(-params.B_0[7]);
  lhs[24] = -rhs[0]*(1)-rhs[2]*(-1)-rhs[12]*(-params.B_1[0])-rhs[13]*(-params.B_1[1])-rhs[14]*(-params.B_1[2])-rhs[15]*(-params.B_1[3]);
  lhs[25] = -rhs[1]*(1)-rhs[3]*(-1)-rhs[12]*(-params.B_1[4])-rhs[13]*(-params.B_1[5])-rhs[14]*(-params.B_1[6])-rhs[15]*(-params.B_1[7]);
  lhs[26] = -rhs[2]*(1)-rhs[4]*(-1)-rhs[16]*(-params.B_2[0])-rhs[17]*(-params.B_2[1])-rhs[18]*(-params.B_2[2])-rhs[19]*(-params.B_2[3]);
  lhs[27] = -rhs[3]*(1)-rhs[5]*(-1)-rhs[16]*(-params.B_2[4])-rhs[17]*(-params.B_2[5])-rhs[18]*(-params.B_2[6])-rhs[19]*(-params.B_2[7]);
  lhs[28] = -rhs[4]*(1)-rhs[6]*(-1)-rhs[20]*(-params.B_3[0])-rhs[21]*(-params.B_3[1])-rhs[22]*(-params.B_3[2])-rhs[23]*(-params.B_3[3]);
  lhs[29] = -rhs[5]*(1)-rhs[7]*(-1)-rhs[20]*(-params.B_3[4])-rhs[21]*(-params.B_3[5])-rhs[22]*(-params.B_3[6])-rhs[23]*(-params.B_3[7]);
  lhs[30] = -rhs[6]*(1)-rhs[24]*(-params.B_4[0])-rhs[25]*(-params.B_4[1])-rhs[26]*(-params.B_4[2])-rhs[27]*(-params.B_4[3]);
  lhs[31] = -rhs[7]*(1)-rhs[24]*(-params.B_4[4])-rhs[25]*(-params.B_4[5])-rhs[26]*(-params.B_4[6])-rhs[27]*(-params.B_4[7]);
  lhs[32] = -rhs[8]*(-params.A_0[0])-rhs[9]*(-params.A_0[1])-rhs[10]*(-params.A_0[2])-rhs[11]*(-params.A_0[3])-rhs[28]*(1);
  lhs[33] = -rhs[8]*(-params.A_0[4])-rhs[9]*(-params.A_0[5])-rhs[10]*(-params.A_0[6])-rhs[11]*(-params.A_0[7])-rhs[29]*(1);
  lhs[34] = -rhs[8]*(-params.A_0[8])-rhs[9]*(-params.A_0[9])-rhs[10]*(-params.A_0[10])-rhs[11]*(-params.A_0[11])-rhs[30]*(1);
  lhs[35] = -rhs[8]*(-params.A_0[12])-rhs[9]*(-params.A_0[13])-rhs[10]*(-params.A_0[14])-rhs[11]*(-params.A_0[15])-rhs[31]*(1);
  lhs[36] = -rhs[8]*(1)-rhs[12]*(-params.A_1[0])-rhs[13]*(-params.A_1[1])-rhs[14]*(-params.A_1[2])-rhs[15]*(-params.A_1[3]);
  lhs[37] = -rhs[9]*(1)-rhs[12]*(-params.A_1[4])-rhs[13]*(-params.A_1[5])-rhs[14]*(-params.A_1[6])-rhs[15]*(-params.A_1[7]);
  lhs[38] = -rhs[10]*(1)-rhs[12]*(-params.A_1[8])-rhs[13]*(-params.A_1[9])-rhs[14]*(-params.A_1[10])-rhs[15]*(-params.A_1[11]);
  lhs[39] = -rhs[11]*(1)-rhs[12]*(-params.A_1[12])-rhs[13]*(-params.A_1[13])-rhs[14]*(-params.A_1[14])-rhs[15]*(-params.A_1[15]);
  lhs[40] = -rhs[12]*(1)-rhs[16]*(-params.A_2[0])-rhs[17]*(-params.A_2[1])-rhs[18]*(-params.A_2[2])-rhs[19]*(-params.A_2[3]);
  lhs[41] = -rhs[13]*(1)-rhs[16]*(-params.A_2[4])-rhs[17]*(-params.A_2[5])-rhs[18]*(-params.A_2[6])-rhs[19]*(-params.A_2[7]);
  lhs[42] = -rhs[14]*(1)-rhs[16]*(-params.A_2[8])-rhs[17]*(-params.A_2[9])-rhs[18]*(-params.A_2[10])-rhs[19]*(-params.A_2[11]);
  lhs[43] = -rhs[15]*(1)-rhs[16]*(-params.A_2[12])-rhs[17]*(-params.A_2[13])-rhs[18]*(-params.A_2[14])-rhs[19]*(-params.A_2[15]);
  lhs[44] = -rhs[16]*(1)-rhs[20]*(-params.A_3[0])-rhs[21]*(-params.A_3[1])-rhs[22]*(-params.A_3[2])-rhs[23]*(-params.A_3[3]);
  lhs[45] = -rhs[17]*(1)-rhs[20]*(-params.A_3[4])-rhs[21]*(-params.A_3[5])-rhs[22]*(-params.A_3[6])-rhs[23]*(-params.A_3[7]);
  lhs[46] = -rhs[18]*(1)-rhs[20]*(-params.A_3[8])-rhs[21]*(-params.A_3[9])-rhs[22]*(-params.A_3[10])-rhs[23]*(-params.A_3[11]);
  lhs[47] = -rhs[19]*(1)-rhs[20]*(-params.A_3[12])-rhs[21]*(-params.A_3[13])-rhs[22]*(-params.A_3[14])-rhs[23]*(-params.A_3[15]);
  lhs[48] = -rhs[20]*(1)-rhs[24]*(-params.A_4[0])-rhs[25]*(-params.A_4[1])-rhs[26]*(-params.A_4[2])-rhs[27]*(-params.A_4[3]);
  lhs[49] = -rhs[21]*(1)-rhs[24]*(-params.A_4[4])-rhs[25]*(-params.A_4[5])-rhs[26]*(-params.A_4[6])-rhs[27]*(-params.A_4[7]);
  lhs[50] = -rhs[22]*(1)-rhs[24]*(-params.A_4[8])-rhs[25]*(-params.A_4[9])-rhs[26]*(-params.A_4[10])-rhs[27]*(-params.A_4[11]);
  lhs[51] = -rhs[23]*(1)-rhs[24]*(-params.A_4[12])-rhs[25]*(-params.A_4[13])-rhs[26]*(-params.A_4[14])-rhs[27]*(-params.A_4[15]);
  lhs[52] = -rhs[24]*(1);
  lhs[53] = -rhs[25]*(1);
  lhs[54] = -rhs[26]*(1);
  lhs[55] = -rhs[27]*(1);
}
void multbymG(double *lhs, double *rhs) {
  lhs[0] = -rhs[8]*(1);
  lhs[1] = -rhs[8]*(-1)-rhs[23]*(-1)-rhs[25]*(1);
  lhs[2] = -rhs[8]*(-1)-rhs[23]*(1)-rhs[25]*(-1);
  lhs[3] = -rhs[9]*(1);
  lhs[4] = -rhs[9]*(-1)-rhs[25]*(-1)-rhs[27]*(1);
  lhs[5] = -rhs[9]*(-1)-rhs[25]*(1)-rhs[27]*(-1);
  lhs[6] = -rhs[10]*(1);
  lhs[7] = -rhs[10]*(-1)-rhs[27]*(-1)-rhs[29]*(1);
  lhs[8] = -rhs[10]*(-1)-rhs[27]*(1)-rhs[29]*(-1);
  lhs[9] = -rhs[11]*(1);
  lhs[10] = -rhs[11]*(-1)-rhs[29]*(-1)-rhs[31]*(1);
  lhs[11] = -rhs[11]*(-1)-rhs[29]*(1)-rhs[31]*(-1);
  lhs[12] = -rhs[34]*(1);
  lhs[13] = -rhs[38]*(1);
  lhs[14] = -rhs[42]*(1);
  lhs[15] = -rhs[46]*(1);
  lhs[16] = -rhs[50]*(1);
  lhs[17] = -rhs[54]*(1);
  lhs[18] = -rhs[34]*(-1);
  lhs[19] = -rhs[38]*(-1);
  lhs[20] = -rhs[42]*(-1);
  lhs[21] = -rhs[46]*(-1);
  lhs[22] = -rhs[50]*(-1);
  lhs[23] = -rhs[54]*(-1);
  lhs[24] = -rhs[12]*(1);
  lhs[25] = -rhs[12]*(-1)-rhs[22]*(1);
  lhs[26] = -rhs[12]*(-1)-rhs[22]*(-1);
  lhs[27] = -rhs[13]*(1);
  lhs[28] = -rhs[13]*(-1)-rhs[24]*(1);
  lhs[29] = -rhs[13]*(-1)-rhs[24]*(-1);
  lhs[30] = -rhs[14]*(1);
  lhs[31] = -rhs[14]*(-1)-rhs[26]*(1);
  lhs[32] = -rhs[14]*(-1)-rhs[26]*(-1);
  lhs[33] = -rhs[15]*(1);
  lhs[34] = -rhs[15]*(-1)-rhs[28]*(1);
  lhs[35] = -rhs[15]*(-1)-rhs[28]*(-1);
  lhs[36] = -rhs[16]*(1);
  lhs[37] = -rhs[16]*(-1)-rhs[30]*(1);
  lhs[38] = -rhs[16]*(-1)-rhs[30]*(-1);
  lhs[39] = -rhs[17]*(1);
  lhs[40] = -rhs[17]*(-1)-rhs[23]*(1);
  lhs[41] = -rhs[17]*(-1)-rhs[23]*(-1);
  lhs[42] = -rhs[18]*(1);
  lhs[43] = -rhs[18]*(-1)-rhs[25]*(1);
  lhs[44] = -rhs[18]*(-1)-rhs[25]*(-1);
  lhs[45] = -rhs[19]*(1);
  lhs[46] = -rhs[19]*(-1)-rhs[27]*(1);
  lhs[47] = -rhs[19]*(-1)-rhs[27]*(-1);
  lhs[48] = -rhs[20]*(1);
  lhs[49] = -rhs[20]*(-1)-rhs[29]*(1);
  lhs[50] = -rhs[20]*(-1)-rhs[29]*(-1);
  lhs[51] = -rhs[21]*(1);
  lhs[52] = -rhs[21]*(-1)-rhs[31]*(1);
  lhs[53] = -rhs[21]*(-1)-rhs[31]*(-1);
}
void multbymGT(double *lhs, double *rhs) {
  lhs[0] = 0;
  lhs[1] = 0;
  lhs[2] = 0;
  lhs[3] = 0;
  lhs[4] = 0;
  lhs[5] = 0;
  lhs[6] = 0;
  lhs[7] = 0;
  lhs[8] = -rhs[0]*(1)-rhs[1]*(-1)-rhs[2]*(-1);
  lhs[9] = -rhs[3]*(1)-rhs[4]*(-1)-rhs[5]*(-1);
  lhs[10] = -rhs[6]*(1)-rhs[7]*(-1)-rhs[8]*(-1);
  lhs[11] = -rhs[9]*(1)-rhs[10]*(-1)-rhs[11]*(-1);
  lhs[12] = -rhs[24]*(1)-rhs[25]*(-1)-rhs[26]*(-1);
  lhs[13] = -rhs[27]*(1)-rhs[28]*(-1)-rhs[29]*(-1);
  lhs[14] = -rhs[30]*(1)-rhs[31]*(-1)-rhs[32]*(-1);
  lhs[15] = -rhs[33]*(1)-rhs[34]*(-1)-rhs[35]*(-1);
  lhs[16] = -rhs[36]*(1)-rhs[37]*(-1)-rhs[38]*(-1);
  lhs[17] = -rhs[39]*(1)-rhs[40]*(-1)-rhs[41]*(-1);
  lhs[18] = -rhs[42]*(1)-rhs[43]*(-1)-rhs[44]*(-1);
  lhs[19] = -rhs[45]*(1)-rhs[46]*(-1)-rhs[47]*(-1);
  lhs[20] = -rhs[48]*(1)-rhs[49]*(-1)-rhs[50]*(-1);
  lhs[21] = -rhs[51]*(1)-rhs[52]*(-1)-rhs[53]*(-1);
  lhs[22] = -rhs[25]*(1)-rhs[26]*(-1);
  lhs[23] = -rhs[1]*(-1)-rhs[2]*(1)-rhs[40]*(1)-rhs[41]*(-1);
  lhs[24] = -rhs[28]*(1)-rhs[29]*(-1);
  lhs[25] = -rhs[1]*(1)-rhs[2]*(-1)-rhs[4]*(-1)-rhs[5]*(1)-rhs[43]*(1)-rhs[44]*(-1);
  lhs[26] = -rhs[31]*(1)-rhs[32]*(-1);
  lhs[27] = -rhs[4]*(1)-rhs[5]*(-1)-rhs[7]*(-1)-rhs[8]*(1)-rhs[46]*(1)-rhs[47]*(-1);
  lhs[28] = -rhs[34]*(1)-rhs[35]*(-1);
  lhs[29] = -rhs[7]*(1)-rhs[8]*(-1)-rhs[10]*(-1)-rhs[11]*(1)-rhs[49]*(1)-rhs[50]*(-1);
  lhs[30] = -rhs[37]*(1)-rhs[38]*(-1);
  lhs[31] = -rhs[10]*(1)-rhs[11]*(-1)-rhs[52]*(1)-rhs[53]*(-1);
  lhs[32] = 0;
  lhs[33] = 0;
  lhs[34] = -rhs[12]*(1)-rhs[18]*(-1);
  lhs[35] = 0;
  lhs[36] = 0;
  lhs[37] = 0;
  lhs[38] = -rhs[13]*(1)-rhs[19]*(-1);
  lhs[39] = 0;
  lhs[40] = 0;
  lhs[41] = 0;
  lhs[42] = -rhs[14]*(1)-rhs[20]*(-1);
  lhs[43] = 0;
  lhs[44] = 0;
  lhs[45] = 0;
  lhs[46] = -rhs[15]*(1)-rhs[21]*(-1);
  lhs[47] = 0;
  lhs[48] = 0;
  lhs[49] = 0;
  lhs[50] = -rhs[16]*(1)-rhs[22]*(-1);
  lhs[51] = 0;
  lhs[52] = 0;
  lhs[53] = 0;
  lhs[54] = -rhs[17]*(1)-rhs[23]*(-1);
  lhs[55] = 0;
}
void multbyP(double *lhs, double *rhs) {
  /* TODO use the fact that P is symmetric? */
  /* TODO check doubling / half factor etc. */
  lhs[0] = rhs[0]*(2*params.Rd[0]);
  lhs[1] = rhs[1]*(2*params.Rd[1]);
  lhs[2] = rhs[2]*(2*params.Rd[0]);
  lhs[3] = rhs[3]*(2*params.Rd[1]);
  lhs[4] = rhs[4]*(2*params.Rd[0]);
  lhs[5] = rhs[5]*(2*params.Rd[1]);
  lhs[6] = rhs[6]*(2*params.Rd[0]);
  lhs[7] = rhs[7]*(2*params.Rd[1]);
  lhs[8] = 0;
  lhs[9] = 0;
  lhs[10] = 0;
  lhs[11] = 0;
  lhs[12] = 0;
  lhs[13] = 0;
  lhs[14] = 0;
  lhs[15] = 0;
  lhs[16] = 0;
  lhs[17] = 0;
  lhs[18] = 0;
  lhs[19] = 0;
  lhs[20] = 0;
  lhs[21] = 0;
  lhs[22] = rhs[22]*(2*params.R[0]);
  lhs[23] = rhs[23]*(2*params.R[1]);
  lhs[24] = rhs[24]*(2*params.R[0]);
  lhs[25] = rhs[25]*(2*params.R[1]);
  lhs[26] = rhs[26]*(2*params.R[0]);
  lhs[27] = rhs[27]*(2*params.R[1]);
  lhs[28] = rhs[28]*(2*params.R[0]);
  lhs[29] = rhs[29]*(2*params.R[1]);
  lhs[30] = rhs[30]*(2*params.R[0]);
  lhs[31] = rhs[31]*(2*params.R[1]);
  lhs[32] = 0;
  lhs[33] = 0;
  lhs[34] = 0;
  lhs[35] = 0;
  lhs[36] = rhs[36]*(2*params.Q[0]);
  lhs[37] = rhs[37]*(2*params.Q[1]);
  lhs[38] = rhs[38]*(2*params.Q[2]);
  lhs[39] = rhs[39]*(2*params.Q[3]);
  lhs[40] = rhs[40]*(2*params.Q[0]);
  lhs[41] = rhs[41]*(2*params.Q[1]);
  lhs[42] = rhs[42]*(2*params.Q[2]);
  lhs[43] = rhs[43]*(2*params.Q[3]);
  lhs[44] = rhs[44]*(2*params.Q[0]);
  lhs[45] = rhs[45]*(2*params.Q[1]);
  lhs[46] = rhs[46]*(2*params.Q[2]);
  lhs[47] = rhs[47]*(2*params.Q[3]);
  lhs[48] = rhs[48]*(2*params.Q[0]);
  lhs[49] = rhs[49]*(2*params.Q[1]);
  lhs[50] = rhs[50]*(2*params.Q[2]);
  lhs[51] = rhs[51]*(2*params.Q[3]);
  lhs[52] = rhs[52]*(2*params.Qf[0]);
  lhs[53] = rhs[53]*(2*params.Qf[1]);
  lhs[54] = rhs[54]*(2*params.Qf[2]);
  lhs[55] = rhs[55]*(2*params.Qf[3]);
}
void fillq(void) {
  work.q[0] = 0;
  work.q[1] = 0;
  work.q[2] = 0;
  work.q[3] = 0;
  work.q[4] = 0;
  work.q[5] = 0;
  work.q[6] = 0;
  work.q[7] = 0;
  work.q[8] = 0;
  work.q[9] = 0;
  work.q[10] = 0;
  work.q[11] = 0;
  work.q[12] = 0;
  work.q[13] = 0;
  work.q[14] = 0;
  work.q[15] = 0;
  work.q[16] = 0;
  work.q[17] = 0;
  work.q[18] = 0;
  work.q[19] = 0;
  work.q[20] = 0;
  work.q[21] = 0;
  work.q[22] = 0;
  work.q[23] = 0;
  work.q[24] = 0;
  work.q[25] = 0;
  work.q[26] = 0;
  work.q[27] = 0;
  work.q[28] = 0;
  work.q[29] = 0;
  work.q[30] = 0;
  work.q[31] = 0;
  work.q[32] = 0;
  work.q[33] = 0;
  work.q[34] = 0;
  work.q[35] = 0;
  work.q[36] = -2*params.Q[0]*params.xRef_1[0];
  work.q[37] = -2*params.Q[1]*params.xRef_1[1];
  work.q[38] = -2*params.Q[2]*params.xRef_1[2];
  work.q[39] = -2*params.Q[3]*params.xRef_1[3];
  work.q[40] = -2*params.Q[0]*params.xRef_2[0];
  work.q[41] = -2*params.Q[1]*params.xRef_2[1];
  work.q[42] = -2*params.Q[2]*params.xRef_2[2];
  work.q[43] = -2*params.Q[3]*params.xRef_2[3];
  work.q[44] = -2*params.Q[0]*params.xRef_3[0];
  work.q[45] = -2*params.Q[1]*params.xRef_3[1];
  work.q[46] = -2*params.Q[2]*params.xRef_3[2];
  work.q[47] = -2*params.Q[3]*params.xRef_3[3];
  work.q[48] = -2*params.Q[0]*params.xRef_4[0];
  work.q[49] = -2*params.Q[1]*params.xRef_4[1];
  work.q[50] = -2*params.Q[2]*params.xRef_4[2];
  work.q[51] = -2*params.Q[3]*params.xRef_4[3];
  work.q[52] = -2*params.Qf[0]*params.xRef_5[0];
  work.q[53] = -2*params.Qf[1]*params.xRef_5[1];
  work.q[54] = -2*params.Qf[2]*params.xRef_5[2];
  work.q[55] = -2*params.Qf[3]*params.xRef_5[3];
}
void fillh(void) {
  work.h[0] = params.MAX_STEER_DT[0];
  work.h[1] = 0;
  work.h[2] = 0;
  work.h[3] = params.MAX_STEER_DT[0];
  work.h[4] = 0;
  work.h[5] = 0;
  work.h[6] = params.MAX_STEER_DT[0];
  work.h[7] = 0;
  work.h[8] = 0;
  work.h[9] = params.MAX_STEER_DT[0];
  work.h[10] = 0;
  work.h[11] = 0;
  work.h[12] = params.MAX_SPEED[0];
  work.h[13] = params.MAX_SPEED[0];
  work.h[14] = params.MAX_SPEED[0];
  work.h[15] = params.MAX_SPEED[0];
  work.h[16] = params.MAX_SPEED[0];
  work.h[17] = params.MAX_SPEED[0];
  work.h[18] = -params.MIN_SPEED[0];
  work.h[19] = -params.MIN_SPEED[0];
  work.h[20] = -params.MIN_SPEED[0];
  work.h[21] = -params.MIN_SPEED[0];
  work.h[22] = -params.MIN_SPEED[0];
  work.h[23] = -params.MIN_SPEED[0];
  work.h[24] = params.MAX_ACCEL[0];
  work.h[25] = 0;
  work.h[26] = 0;
  work.h[27] = params.MAX_ACCEL[0];
  work.h[28] = 0;
  work.h[29] = 0;
  work.h[30] = params.MAX_ACCEL[0];
  work.h[31] = 0;
  work.h[32] = 0;
  work.h[33] = params.MAX_ACCEL[0];
  work.h[34] = 0;
  work.h[35] = 0;
  work.h[36] = params.MAX_ACCEL[0];
  work.h[37] = 0;
  work.h[38] = 0;
  work.h[39] = params.MAX_STEER[0];
  work.h[40] = 0;
  work.h[41] = 0;
  work.h[42] = params.MAX_STEER[0];
  work.h[43] = 0;
  work.h[44] = 0;
  work.h[45] = params.MAX_STEER[0];
  work.h[46] = 0;
  work.h[47] = 0;
  work.h[48] = params.MAX_STEER[0];
  work.h[49] = 0;
  work.h[50] = 0;
  work.h[51] = params.MAX_STEER[0];
  work.h[52] = 0;
  work.h[53] = 0;
}
void fillb(void) {
  work.b[0] = 0;
  work.b[1] = 0;
  work.b[2] = 0;
  work.b[3] = 0;
  work.b[4] = 0;
  work.b[5] = 0;
  work.b[6] = 0;
  work.b[7] = 0;
  work.b[8] = params.C_0[0];
  work.b[9] = params.C_0[1];
  work.b[10] = params.C_0[2];
  work.b[11] = params.C_0[3];
  work.b[12] = params.C_1[0];
  work.b[13] = params.C_1[1];
  work.b[14] = params.C_1[2];
  work.b[15] = params.C_1[3];
  work.b[16] = params.C_2[0];
  work.b[17] = params.C_2[1];
  work.b[18] = params.C_2[2];
  work.b[19] = params.C_2[3];
  work.b[20] = params.C_3[0];
  work.b[21] = params.C_3[1];
  work.b[22] = params.C_3[2];
  work.b[23] = params.C_3[3];
  work.b[24] = params.C_4[0];
  work.b[25] = params.C_4[1];
  work.b[26] = params.C_4[2];
  work.b[27] = params.C_4[3];
  work.b[28] = params.x0[0];
  work.b[29] = params.x0[1];
  work.b[30] = params.x0[2];
  work.b[31] = params.x0[3];
}
void pre_ops(void) {
  work.quad_421048287232[0] = params.xRef_1[0]*params.Q[0]*params.xRef_1[0]+params.xRef_1[1]*params.Q[1]*params.xRef_1[1]+params.xRef_1[2]*params.Q[2]*params.xRef_1[2]+params.xRef_1[3]*params.Q[3]*params.xRef_1[3];
  work.quad_122769096704[0] = params.xRef_2[0]*params.Q[0]*params.xRef_2[0]+params.xRef_2[1]*params.Q[1]*params.xRef_2[1]+params.xRef_2[2]*params.Q[2]*params.xRef_2[2]+params.xRef_2[3]*params.Q[3]*params.xRef_2[3];
  work.quad_914672238592[0] = params.xRef_3[0]*params.Q[0]*params.xRef_3[0]+params.xRef_3[1]*params.Q[1]*params.xRef_3[1]+params.xRef_3[2]*params.Q[2]*params.xRef_3[2]+params.xRef_3[3]*params.Q[3]*params.xRef_3[3];
  work.quad_169529696256[0] = params.xRef_4[0]*params.Q[0]*params.xRef_4[0]+params.xRef_4[1]*params.Q[1]*params.xRef_4[1]+params.xRef_4[2]*params.Q[2]*params.xRef_4[2]+params.xRef_4[3]*params.Q[3]*params.xRef_4[3];
  work.quad_894728441856[0] = params.xRef_5[0]*params.Qf[0]*params.xRef_5[0]+params.xRef_5[1]*params.Qf[1]*params.xRef_5[1]+params.xRef_5[2]*params.Qf[2]*params.xRef_5[2]+params.xRef_5[3]*params.Qf[3]*params.xRef_5[3];
}
